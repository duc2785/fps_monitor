language: go

# go 1.13 is default on ubuntu 20.10 LTS
# go 1.15 is the latest version, and the version used for the latest release

go:
  - "1.13"
  - "1.15"

os:
  - linux
  - osx

dist:
  - focal

# oniguruma 5.9.6 was the default for a long time, and has slightly different API
# oniguruma 6.9.4 is the current default on ubuntu 20.10 LTS
# oniguruma 6.9.5-rev1 is the latest version, and the version used for the latest release

env:
  matrix:
    - ONIG_VERSION=5.9.6 MODE=STATIC
    - ONIG_VERSION=6.9.4 MODE=STATIC
    - ONIG_VERSION=6.9.4 MODE=STATIC
    - ONIG_VERSION=6.9.5-rev1 MODE=STATIC
    - ONIG_VERSION=DEFAULT MODE=DYNAMIC

before_install:
  - |
    set -e ;
    set -x ;
    if [[ "$TRAVIS_OS_NAME" == "osx" ]] ; then
        # Workaround for broken OS X build, see https://github.com/travis-ci/travis-ci/issues/8703
        unset -f cd ;
    fi
    case "$ONIG_VERSION" in
    "DEFAULT")
        if [[ "$TRAVIS_OS_NAME" == "osx" ]] ; then
            brew update ;
            brew install oniguruma ;
        elif [[ "$TRAVIS_OS_NAME" == "linux" ]] ; then
            sudo apt-get -qq update ;
            sudo apt-get install libonig-dev ;
        fi
        ;;
    "6.9.5-rev1")
        PROJ_DIR=$(pwd) ;
        cd /tmp ;
        curl -sLO https://github.com/kkos/oniguruma/releases/download/v6.9.5_rev1/onig-6.9.5-rev1.tar.gz ;
        tar xfz onig-6.9.5-rev1.tar.gz ;
        cd onig-6.9.5 ;
        ./configure && make && sudo make install ;
        cd "${PROJ_DIR}" ;
        ;;
    *)
        PROJ_DIR=$(pwd) ;
        cd /tmp ;
        curl -sLO https://github.com/kkos/oniguruma/releases/download/v${ONIG_VERSION}/onig-${ONIG_VERSION}.tar.gz ;
        tar xfz onig-${ONIG_VERSION}.tar.gz ;
        cd onig-${ONIG_VERSION} ;
        ./configure && make && sudo make install ;
        cd "${PROJ_DIR}" ;
        ;;
    esac ;
    if [[ "$TRAVIS_OS_NAME" == "linux" ]] ;
    then
        sudo ldconfig ;
    fi ;
    set +e ;

install:
  - echo "nothing to do in install phase" ;

script:
  - |
    set -e ;
    set -x ;
    if [[ "$TRAVIS_OS_NAME" == "osx" ]] ;
    then
        LDD_COMMAND="otool -L" ;
    else
        LDD_COMMAND="ldd" ;
    fi
    case "$MODE" in
    "STATIC")
        if [[ "$TRAVIS_OS_NAME" == "osx" ]] ;
        then
            sed -i.bak 's;#cgo LDFLAGS: -L/usr/local/lib -lonig;#cgo LDFLAGS: /usr/local/lib/libonig.a;' oniguruma/oniguruma.go ;
        fi ;
        CGO_LDFLAGS=/usr/local/lib/libonig.a go test -count=1 -v ./... ;
        CGO_LDFLAGS=/usr/local/lib/libonig.a go install ;
        if $LDD_COMMAND $GOPATH/bin/grok_exporter | grep libonig ;
        then
            echo "ERROR: Expected statically linked binary." >&2 ;
            exit -1 ;
        fi ;
        ./hack/smoke-test.sh ;
        ;;
    "DYNAMIC")
        go test -failfast -count=1 -v ./... ;
        go install ;
        if ! $LDD_COMMAND $GOPATH/bin/grok_exporter | grep libonig ;
        then
            echo "ERROR: Expected dynamically linked binary." >&2 ;
            exit -1 ;
        fi ;
        ./hack/smoke-test.sh ;
        ;;
    *)
        echo "Unknown mode $MODE" >&2 ;
        exit 1 ;
        ;;
    esac ;
    set +e ;
